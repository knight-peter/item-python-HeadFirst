# count()     给出某个值在数组中出现的次数
# extend()    给数组增加一列元素
# index()     寻找一个数组元素并返回它的索引值
# insert()    在任意索引位置增加一个数组元素
# pop()       删除并返回最后一个数组元素
# remove()    删除并返回数组的第一个元素
# reverse()   把数组按相反的顺序排序
# sort()      用特定的顺序给数组排序（从低到高）


# 数组                    一个变量，有许多可以存放数据的有索引的空位
# 链表（linked list）     一个变量，数据在其中形成了一个链条，链条上的一个数据项指向另一个数据项，被指向的数据项又接着指向再下一个数据项，以此类推
# 队列（Queue）           一个变量，允许数据从集合的一端进入，从另一端离开，支持先进先出的机制
# 哈希（Hash）            一个变量，含有两列和（可能）多行的数据
# 集合（Set）             一个变量，包含了一个由一些独立数据项组成的集合
# 多维数组                一个变量，可以用一个多维矩形来包含数据（但是经常使用的纬度只是2）


# 新建一个空哈希
scores={}
result_f=open("results.txt")
for line in result_f:
    # 添加split()方法的调用把文件中的行分割成两个字符串，创建"name"和"score"变量
    (name,score)=line.split()
    # 在分离出名字和分数之后，用变量“score”的值作为哈希的关键字，用变量“name”的值作为哈希中关键字对应的值
    scores[score]=name
result_f.close()# 代码运行到这儿时，数组已经在内存中了，但是它不是你需要的顺序。它没有顺序

print("排名是：")
# 用循环来处理哈希的内容
for each_score in sorted(scores.keys(),reverse=True):# 记住：你哈希中的关键字是分熟，它们都是数字，这样我们就可以用带有“reverse=True”选项的“sorted()”来给她们从高到低的顺序排序
    # 显示哈希中的每一行，同时描述一下具体的关联信息
    print('姓名：'+scores[each_score]+',成绩：'+each_score)
